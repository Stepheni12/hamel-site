<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Hamel&#39;s Blog</title>
<link>https://hamel.dev/</link>
<atom:link href="https://hamel.dev/index.xml" rel="self" type="application/rss+xml"/>
<description>A collection of technical blogs and talks on machine learning and data science.</description>
<image>
<url>https://hamel.dev/quarto.png</url>
<title>Hamel&#39;s Blog</title>
<link>https://hamel.dev/</link>
<height>86</height>
<width>144</width>
</image>
<generator>quarto-1.4.533</generator>
<lastBuildDate>Thu, 11 Jan 2024 08:00:00 GMT</lastBuildDate>
<item>
  <title>How To Debug Axolotl</title>
  <dc:creator>Hamel Husain</dc:creator>
  <link>https://hamel.dev/blog/posts/axolotl/</link>
  <description><![CDATA[ 




<p><img src="https://hamel.dev/blog/posts/axolotl/images/debug_axolotl.png" class="img-fluid"></p>
<section id="motivation" class="level2">
<h2 class="anchored" data-anchor-id="motivation">Motivation</h2>
<p><a href="https://github.com/OpenAccess-AI-Collective/axolotl">Axolotl</a> is a great project for fine-tuning LLMs. I started contributing to the project, and I found that it was difficult to debug. I wanted to share some tips and tricks I learned along the way, along with configuration files for debugging with VSCode. Moreover, I think being able to debug axolotl empowers developers who encounter bugs or want to understand how the code works. I hope this document helps you get started.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This content is now part of the Axolotl docs!
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="https://github.com/OpenAccess-AI-Collective/axolotl/pull/1089">I contributed</a> this blog post’s contents as documentation for the axolotl project. <strong>You can find this content <a href="https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/docs/debugging.md">in the axolotl repo here</a></strong>.</p>
</div>
</div>
</section>
<section id="general-tips" class="level2">
<h2 class="anchored" data-anchor-id="general-tips">General Tips</h2>
<p>While debugging, it’s helpful to simplify your test scenario as much as possible. Here are some tips for doing so:</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>All of these tips are incorporated into the example configuration for debugging with VSCode below.</p>
</div>
</div>
<ol type="1">
<li><p><strong>Make sure you are using the latest version of axolotl</strong>: This project changes often and bugs get fixed fast. Check your git branch and make sure you have pulled the latest changes from <code>main</code>.</p></li>
<li><p><strong>Eliminate Concurrency</strong>: Restrict the number of processes to 1 for both training and data preprocessing:</p>
<ul>
<li>Set <code>CUDA_VISIBLE_DEVICES</code> to a single GPU, ex: <code>export CUDA_VISIBLE_DEVICES=0</code>.</li>
<li>Set <code>dataset_processes: 1</code> in your axolotl config or run the training command with <code>--dataset_processes=1</code>.</li>
</ul></li>
<li><p><strong>Use a small dataset</strong>: Construct or use a small dataset from HF Hub. When using a small dataset, you will often have to make sure <code>sample_packing: False</code> and <code>eval_sample_packing: False</code> to avoid errors. If you are in a pinch and don’t have time to construct a small dataset but want to use from the HF Hub, you can shard the data (this will still tokenize the entire dataset but will only use a fraction of the data for training. For example, to shard the dataset into 20 pieces, add the following to your axolotl config):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataset</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    ...</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shards</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span></code></pre></div></li>
<li><p><strong>Use a small model</strong>: A good example of a small model is <a href="https://huggingface.co/TinyLlama/TinyLlama-1.1B-Chat-v1.0">TinyLlama/TinyLlama-1.1B-Chat-v1.0</a>.</p></li>
<li><p><strong>Minimize iteration time</strong>: Make sure the training loop finishes as fast as possible, with these settings.</p>
<ul>
<li><code>micro_batch_size: 1</code></li>
<li><code>max_steps: 1</code></li>
<li><code>val_set_size: 0</code></li>
</ul></li>
<li><p><strong>Clear Caches:</strong> Axolotl caches certain steps and so does the underlying HuggingFace trainer. You may want to clear some of these caches when debugging.</p>
<ul>
<li>Data preprocessing: When debugging data preprocessing, which includes prompt template formation, you may want to delete the directory set in <code>dataset_prepared_path:</code> in your axolotl config. If you didn’t set this value, the default is <code>last_run_prepared</code>.</li>
<li>HF Hub: If you are debugging data preprocessing, you should clear the relevant HF cache <a href="https://huggingface.co/docs/datasets/cache">HuggingFace cache</a>, by deleting the appropriate <code>~/.cache/huggingface/datasets/...</code> folder(s).</li>
<li><strong>The recommended approach is to redirect all outputs and caches to a temporary folder and delete selected subfolders before each run. This is demonstrated in the example configuration below.</strong></li>
</ul></li>
</ol>
</section>
<section id="debugging-with-vscode" class="level2">
<h2 class="anchored" data-anchor-id="debugging-with-vscode">Debugging with VSCode</h2>
<section id="background" class="level3">
<h3 class="anchored" data-anchor-id="background">Background</h3>
<p>The below example shows how to configure VSCode to debug data preprocessing of the <code>sharegpt</code> format. This is the format used when you have the following in your axolotl config:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">datasets</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> &lt;path to your sharegpt formatted dataset&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # example on HF Hub: philschmid/guanaco-sharegpt-style</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sharegpt</span></span></code></pre></div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you are already familiar with advanced VSCode debugging, you can skip the below explanation and look at the files <a href="../.vscode/launch.json">.vscode/launch.json</a> and <a href="https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/.vscode/tasks.json">.vscode/tasks.json</a> for an example configuration.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you prefer to watch a video, rather than read, you can skip to the video tutorial below (but doing both is recommended).</p>
</div>
</div>
</section>
<section id="setup" class="level3">
<h3 class="anchored" data-anchor-id="setup">Setup</h3>
<p>Make sure you have an <a href="https://setuptools.pypa.io/en/latest/userguide/development_mode.html">editable install</a> of Axolotl, which ensures that changes you make to the code are reflected at runtime. Run the following commands from the root of this project:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip3</span> install packaging</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip3</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.[flash-attn,deepspeed]'</span></span></code></pre></div>
<section id="remote-hosts" class="level4">
<h4 class="anchored" data-anchor-id="remote-hosts">Remote Hosts</h4>
<p>If you developing on a remote host, you can easily use VSCode to debug remotely. To do so, you will need to follow this <a href="https://code.visualstudio.com/docs/remote/ssh">remote - SSH guide</a>. You can also see the video below on Docker and Remote SSH debugging.</p>
</section>
</section>
<section id="configuration" class="level3">
<h3 class="anchored" data-anchor-id="configuration">Configuration</h3>
<p>The easiest way to get started is to modify the <a href="https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/.vscode/launch.json">.vscode/launch.json</a> file in the axolotl GitHub repo. This is just an example configuration, so you may need to modify or copy it to suit your needs.</p>
<p>For example, to mimic the command <code>cd devtools &amp;&amp; CUDA_VISIBLE_DEVICES=0 accelerate launch -m axolotl.cli.train dev_sharegpt.yml</code>, you would use the below configuration<sup>1</sup>. Note that we add additional flags that override the axolotl config and incorporate the tips above (see the comments). We also set the working directory to <code>devtools</code> and set the <code>env</code> variable <code>HF_HOME</code> to a temporary folder that is later partially deleted. This is because we want to delete the HF dataset cache before each run in order to ensure that the data preprocessing code is run from scratch.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/.vscode/launch.json</span></span>
<span id="cb4-2">{</span>
<span id="cb4-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"version"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.2.0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"configurations"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb4-5">        {</span>
<span id="cb4-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debug axolotl prompt - sharegpt"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"module"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accelerate.commands.launch"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"request"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"launch"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"args"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb4-11">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-m"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"axolotl.cli.train"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dev_sharegpt.yml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-12">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The flags below simplify debugging by overriding the axolotl config </span></span>
<span id="cb4-13">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with the debugging tips above.  Modify as needed.</span></span>
<span id="cb4-14">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--dataset_processes=1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// limits data preprocessing to one process</span></span>
<span id="cb4-15">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--max_steps=1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// limits training to just one step</span></span>
<span id="cb4-16">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--batch_size=1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// minimizes batch size</span></span>
<span id="cb4-17">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--micro_batch_size=1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// minimizes batch size</span></span>
<span id="cb4-18">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--val_set_size=0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// disables validation</span></span>
<span id="cb4-19">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--sample_packing=False"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// disables sample packing which is necessary for small datasets</span></span>
<span id="cb4-20">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--eval_sample_packing=False"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// disables sample packing on eval set</span></span>
<span id="cb4-21">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--dataset_prepared_path=temp_debug/axolotl_outputs/data"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// send data outputs to a temp folder</span></span>
<span id="cb4-22">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--output_dir=temp_debug/axolotl_outputs/model"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// send model outputs to a temp folder</span></span>
<span id="cb4-23">                ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb4-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"console"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integratedTerminal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// show output in the integrated terminal</span></span>
<span id="cb4-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cwd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"${workspaceFolder}/devtools"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// set working directory to devtools from the root of the project</span></span>
<span id="cb4-26">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"justMyCode"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// step through only axolotl code</span></span>
<span id="cb4-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"env"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CUDA_VISIBLE_DEVICES"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Since we aren't doing distributed training, we need to limit to one GPU</span></span>
<span id="cb4-28">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HF_HOME"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"${workspaceFolder}/devtools/temp_debug/.hf-cache"</span>}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// send HF cache to a temp folder</span></span>
<span id="cb4-29">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preLaunchTask"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cleanup-for-dataprep"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// delete temp folders (see below)</span></span>
<span id="cb4-30">        }</span>
<span id="cb4-31">    ]</span>
<span id="cb4-32">}</span></code></pre></div>
<p><strong>Additional notes about this configuration:</strong></p>
<ul>
<li>The argument <code>justMyCode</code> is set to <code>true</code> such that you step through only the axolotl code. If you want to step into dependencies, set this to <code>false</code>.</li>
<li>The <code>preLaunchTask</code>: <code>cleanup-for-dataprep</code> is defined in <a href="https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/.vscode/tasks.json">.vscode/tasks.json</a> and is used to delete the following folders before debugging, which is essential to ensure that the data pre-processing code is run from scratch:
<ul>
<li><code>./devtools/temp_debug/axolotl_outputs</code></li>
<li><code>./devtools/temp_debug/.hf-cache/datasets</code></li>
</ul></li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>You may not want to delete these folders. For example, if you are debugging model training instead of data pre-processing, you may NOT want to delete the cache or output folders. You may also need to add additional tasks to the <code>tasks.json</code> file depending on your use case.</p>
</div>
</div>
<p>Below is the <a href="https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/.vscode/tasks.json">./vscode/tasks.json</a> file that defines the <code>cleanup-for-dataprep</code> task. This task is run before each debugging session when you use the above configuration. Note how there are two tasks that delete the two folders mentioned above. The third task <code>cleanup-for-dataprep</code> is a composite task that combines the two tasks. A composite task is necessary because VSCode does not allow you to specify multiple tasks in the <code>preLaunchTask</code> argument of the <code>launch.json</code> file.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode js code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// https://github.com/OpenAccess-AI-Collective/axolotl/blob/main/.vscode/tasks.json</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this file is used by launch.json</span></span>
<span id="cb5-3">{</span>
<span id="cb5-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"version"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2.0.0"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tasks"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [</span>
<span id="cb5-6">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this task changes into the devtools directory and deletes the temp_debug/axolotl_outputs folder</span></span>
<span id="cb5-7">      {</span>
<span id="cb5-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete-outputs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"command"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rm -rf temp_debug/axolotl_outputs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"options"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>{ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cwd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"${workspaceFolder}/devtools"</span>}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"problemMatcher"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> []</span>
<span id="cb5-13">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-14">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this task changes into the devtools directory and deletes the `temp_debug/.hf-cache/datasets` folder</span></span>
<span id="cb5-15">      {</span>
<span id="cb5-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete-temp-hf-dataset-cache"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shell"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"command"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rm -rf temp_debug/.hf-cache/datasets"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"options"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>{ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cwd"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"${workspaceFolder}/devtools"</span>}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"problemMatcher"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> []</span>
<span id="cb5-21">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// this task combines the two tasks above</span></span>
<span id="cb5-23">      {</span>
<span id="cb5-24">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cleanup-for-dataprep"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-25">       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dependsOn"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete-outputs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete-temp-hf-dataset-cache"</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-26">      }</span>
<span id="cb5-27">    ]</span>
<span id="cb5-28">}</span></code></pre></div>
</section>
<section id="customizing-your-debugger" class="level3">
<h3 class="anchored" data-anchor-id="customizing-your-debugger">Customizing your debugger</h3>
<p>Your debugging use case may differ from the example above. The easiest thing to do is to put your own axolotl config in the <code>devtools</code> folder and modify the <code>launch.json</code> file to use your config. You may also want to modify the <code>preLaunchTask</code> to delete different folders or not delete anything at all.</p>
</section>
<section id="video-tutorial" class="level3">
<h3 class="anchored" data-anchor-id="video-tutorial">Video Tutorial</h3>
<p>The following video tutorial walks through the above configuration and demonstrates how to debug with VSCode:</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/xUUB11yeMmc" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
</section>
</section>
<section id="debugging-with-docker" class="level2">
<h2 class="anchored" data-anchor-id="debugging-with-docker">Debugging With Docker</h2>
<p>Using <a href="https://hub.docker.com/r/winglian/axolotl/tags">official Axolotl Docker images</a> is a great way to debug your code, and is a very popular way to use Axolotl. Attaching VSCode to Docker takes a few more steps.</p>
<section id="setup-1" class="level3">
<h3 class="anchored" data-anchor-id="setup-1">Setup</h3>
<p>On the host that is running axolotl (ex: if you are using a remote host), clone the axolotl repo and change your current directory to the root:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/OpenAccess-AI-Collective/axolotl</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> axolotl</span></code></pre></div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you already have axolotl cloned on your host, make sure you have the latest changes and change into the root of the project.</p>
</div>
</div>
<p>Next, run the desired docker image and mount the current directory. Below is a docker command you can run to do this:<sup>2</sup></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--privileged</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gpus</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'"all"'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--shm-size</span> 10g <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> axolotl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ipc</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>host <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ulimit</span> memlock=-1 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ulimit</span> stack=67108864 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mount</span> type=bind,src=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${PWD}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,target=/workspace/axolotl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HOME}</span>/.cache/huggingface:/root/.cache/huggingface winglian/axolotl:main-py3.10-cu118-2.0.1</span></code></pre></div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>To understand which containers are available, see the <a href="../README.md#docker">Docker section of the README</a> and the <a href="https://hub.docker.com/r/winglian/axolotl/tags">DockerHub repo</a>. For details of how the Docker containers are built, see axolotl’s <a href="../.github/workflows/main.yml">Docker CI builds</a>.</p>
</div>
</div>
<p>You will now be in the container. Next, perform an editable install of Axolotl:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip3</span> install packaging</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip3</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.[flash-attn,deepspeed]'</span></span></code></pre></div>
</section>
<section id="attach-to-container" class="level3">
<h3 class="anchored" data-anchor-id="attach-to-container">Attach To Container</h3>
<p>Next, if you are using a remote host, <a href="https://code.visualstudio.com/docs/remote/ssh">Remote into this host with VSCode</a>. If you are using a local host, you can skip this step.</p>
<p>Next, select <code>Dev Containers: Attach to Running Container...</code> using the command palette (<code>CMD + SHIFT + P</code>) in VSCode. You will be prompted to select a container to attach to. Select the container you just created. You will now be in the container with a working directory that is at the root of the project. Any changes you make to the code will be reflected both in the container and on the host.</p>
<p>Now you are ready to debug as described above (see Debugging with VSCode).</p>
</section>
<section id="video---attaching-to-docker-on-remote-host" class="level3">
<h3 class="anchored" data-anchor-id="video---attaching-to-docker-on-remote-host">Video - Attaching To Docker On Remote Host</h3>
<p>Here is a short video that demonstrates how to attach to a Docker container on a remote host:</p>
<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/A_A2CEHj4ew" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The config actually mimics the command <code>CUDA_VISIBLE_DEVICES=0 python -m accelerate.commands.launch -m axolotl.cli.train devtools/sharegpt.yml</code>, but this is the same thing.↩︎</p></li>
<li id="fn2"><p>Many of the below flags are recommended best practices by Nvidia when using nvidia-container-toolkit. You can read more about these flags <a href="https://docs.nvidia.com/deeplearning/frameworks/user-guide/index.html">here</a>.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>LLMs</category>
  <category>fine-tuning</category>
  <category>axolotl</category>
  <guid>https://hamel.dev/blog/posts/axolotl/</guid>
  <pubDate>Thu, 11 Jan 2024 08:00:00 GMT</pubDate>
  <media:content url="https://hamel.dev/blog/posts/axolotl/images/debug_axolotl_small.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Dokku: my favorite personal serverless platform</title>
  <dc:creator>Hamel Husain</dc:creator>
  <link>https://hamel.dev/blog/posts/dokku/</link>
  <description><![CDATA[ 




<div class="img-fluid quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/dokku/images/serverless.png" class="img-fluid figure-img"></p>
<figcaption>With Dokku, you can turn a VPS into a powerful serverless platform</figcaption>
</figure>
</div>
<section id="what-is-dokku" class="level2">
<h2 class="anchored" data-anchor-id="what-is-dokku">What is Dokku?</h2>
<p><a href="https://dokku.com/">Dokku</a> is an open-source Platform as a Service (PaaS) that runs on a single server of your choice. <strong>It’s like <a href="https://www.heroku.com/">Heroku</a>, but you own it.</strong> It is a great way to get the benefits of Heroku without the costs (Heroku can get quite expensive!). I need to deploy many applications for my <a href="https://parlance-labs.com/">LLM consulting work</a>. Having a cost-effective, easy-to-use serverless platform is essential for me.</p>
<p><strong>I run a Dokku server on a $7/month VPS on <a href="https://us.ovhcloud.com/">OVHcloud</a></strong> for non-gpu workloads. These applications include things like <a href="https://nbsanity.com/">nbsanity</a> and <a href="https://langfree.parlance-labs.com/tutorials/shiny.html#run-the-shiny-app-locally">data cleaning tools for LLMs</a>.</p>
<p>Some of the features I love about Dokku:</p>
<ul>
<li>Easy to use (like Heroku).</li>
<li>Automatic SSL certificate management via <a href="https://letsencrypt.org/">Let’s Encrypt</a>.</li>
<li>Basic Auth support so I can password-protect sites.</li>
<li>Scale up and down with a single command.</li>
<li>Flexibility to handle any application (Node, Python, etc), including defining a Docker container.</li>
<li>Lots of <a href="https://dokku.com/docs/community/plugins/?h=plugins#official-plugins">official plugins</a> that do almost anything I want.</li>
<li>Easily deploy with git commands.</li>
</ul>
</section>
<section id="minimal-dokku-examples" class="level1">
<h1>Minimal Dokku Examples</h1>
<p>Make sure you <a href="https://dokku.com/docs/getting-started/installation/">install Dokku</a> on your VPS. As I mentioned, I use <a href="https://us.ovhcloud.com/">OVH</a>.</p>
<section id="deploying-apps-as-a-docker-container" class="level2">
<h2 class="anchored" data-anchor-id="deploying-apps-as-a-docker-container">Deploying Apps as A Docker Container</h2>
<p>An easy way to deploy applications is with a Docker container.</p>
<p>To deploy a Docker container, I put a Dockerfile in the root of my git repo like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Dockerfile</strong></pre>
</div>
<div class="sourceCode" id="cb1" data-filename="Dockerfile" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">FROM</span> python:3.10</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">COPY</span> . /app</span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WORKDIR</span> /app</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install the local package</span></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install .</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This directory contains app.py, a FastApi app</span></span>
<span id="cb1-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">WORKDIR</span> /app/</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ENTRYPOINT</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./entrypoint.sh"</span>]</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>The <code>entrypoint.sh</code> script allows me to easily run the app locally or in a Docker container. It looks like this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>entrypoint.sh</strong></pre>
</div>
<div class="sourceCode" id="cb2" data-filename="entrypoint.sh" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exec</span> uvicorn main:app <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--port</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PORT</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--host</span> 0.0.0.0</span></code></pre></div>
</div>
</div>
</div>
<p>On the Dokku host, create the app:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dokku</span> apps:create myapp</span></code></pre></div>
<p><strong>Locally</strong>, set up access to the Dokku host and name it <code>dokku</code> in your <code>~/.ssh/config</code> file. For example, here is mine:</p>
<pre><code>Host dokku
  HostName &lt;The external IP address of your Dokku host&gt;
  User ubuntu
  IdentityFile /Users/hamel/.ssh/dokku</code></pre>
<p>Locally, add the Dokku host as a remote and push to it:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote add dokku dokku@dokku:myapp</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push dokku main</span></code></pre></div>
<p>That’s it - your app should be running on the Dokku host! Your local logs will print the URL that your application is served on, which by default will be <code>myapp.yourdomain.com</code>. You can also scale it up/down with the following command:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#scale to two workers</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dokku</span> ps:scale myapp web=2</span></code></pre></div>
<p>We are just scratching the surface. For more details, see the <a href="https://dokku.com/docs/">Dokku docs</a>.</p>
</section>
<section id="static-sites" class="level2">
<h2 class="anchored" data-anchor-id="static-sites">Static Sites</h2>
<p>GitHub Pages is annoying in that you can’t easily deploy private static sites without paying for an expensive Enterprise account. With Dokku, you can easily deploy a static site from a private GitHub Repo and password-protect it.</p>
<p>We will assume that you have a static site in a git repo in a folder named <code>_site</code>.</p>
<p><strong>On the Dokku host</strong>, create an app named <code>mysite</code> and set the <code>NGINX_ROOT</code> environment variable to <code>_site</code>:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dokku</span> apps:create mystite</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dokku</span> config:set static-site NGINX_ROOT=_site</span></code></pre></div>
<p>Also on the Dokku host, install <a href="https://github.com/dokku/dokku-http-auth">basic auth</a> and <a href="https://github.com/dokku/dokku-http-auth/issues/15#issuecomment-1637058437">set permissions</a> so the plugin can work properly.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># do setup for the auth plugin that we will use later</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> dokku plugin:install https://github.com/dokku/dokku-http-auth.git</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chmod +x /home/dokku</span></code></pre></div>
<p>Then execute the following commands from the root of your git repo that contains the static site. :</p>
<div class="sourceCode" id="annotated-cell-8" style="background: #f1f3f5;"><pre class="sourceCode bash code-annotation-code code-with-copy code-annotated"><code class="sourceCode bash"><a class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-8-1" class="code-annotation-target"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> .static</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-8-2" class="code-annotation-target"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> BUILDPACK_URL=https://github.com/dokku/buildpack-nginx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> .env</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-8" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-8-3" class="code-annotation-target"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote add dokku dokku@dokku:mysite</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-8" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="1" data-code-annotation="1">tells <code>dokku</code> that this is a static site</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="2" data-code-annotation="2">tells <code>dokku</code> to use the nginx buildpack for static sites (it will usually automatically detect this, but if you have a project with code and a static site, you need to tell it to use the nginx buildpack so it doesn’t get confused).</span>
</dd>
<dt data-target-cell="annotated-cell-8" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-8" data-code-lines="3" data-code-annotation="3">add the <code>dokku</code> host as a remote. For this to work, make sure <code>dokku</code> is a hostname in your <code>~/.ssh/config</code> file as described in the previous section.</span>
</dd>
</dl>
<p>Finally, deploy your application:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push dokku main</span></code></pre></div>
<p>You can now add auth by running the following command on the Dokku host:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dokku</span> http-auth:enable mystite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>username<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>password<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can add multiple usernames/passwords and even filter specific IPs. See <a href="https://github.com/dokku/dokku-http-auth">the docs</a>.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
SSL / HTTPS
</div>
</div>
<div class="callout-body-container callout-body">
<p>It’s often desirable to have HTTPS for your site. Dokku makes this easy with the <a href="https://github.com/dokku/dokku-letsencrypt">Let’s Encrypt Plugin</a>, which will even auto-renew for you. I don’t use this, because I’m letting <a href="https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records/">Cloudflare handle this with its proxy</a>.</p>
<p>If you are using Cloudflare this way, activating this plugin will mess things up (don’t worry its easy to disable). Honestly, I think it’s easier to let Cloudflare handle it if you are already doing so.</p>
</div>
</div>
</section>
</section>
<section id="deploying-with-github-actions" class="level1">
<h1>Deploying With GitHub Actions</h1>
<p>You can automatically deploy Dokku apps with GitHub Actions, which is helpful if you don’t want to fiddle with pushing to the Dokku host. Here is an example GitHub Action workflow that does this:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>deploy-dokku.yml</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="deploy-dokku.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> CI</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workflow_dispatch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">concurrency</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # Cancel previous jobs to avoid deploy locks on dokku</span></span>
<span id="cb11-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ github.ref }}</span></span>
<span id="cb11-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cancel-in-progress</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">deploy-dokku</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb11-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Checkout code</span></span>
<span id="cb11-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v2</span></span>
<span id="cb11-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb11-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch-depth</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb11-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Install SSH key</span></span>
<span id="cb11-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb11-22">          echo "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}" &gt; private_key.pem</span>
<span id="cb11-23">          chmod 600 private_key.pem</span>
<span id="cb11-24"></span>
<span id="cb11-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Add remote and push</span></span>
<span id="cb11-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb11-27">          git remote add dokku dokku@rechat.co:llm-eval</span>
<span id="cb11-28">          GIT_SSH_COMMAND="ssh -i private_key.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git push dokku main -f</span></code></pre></div>
</div>
<section id="miscellaneous-tips" class="level2">
<h2 class="anchored" data-anchor-id="miscellaneous-tips">Miscellaneous Tips</h2>
<p>These are things I often forget, so I’m writing them down here. For these examples, assume my app is named <code>llm-eval</code> and my host is <code>rechat.co</code>.</p>
<section id="run-a-command-remotely" class="level3">
<h3 class="anchored" data-anchor-id="run-a-command-remotely">Run a command remotely</h3>
<p>You don’t have to ssh into the Dokku host just to execute commands. You can execute them remotely via the <code>dokku</code> user like this:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https://dokku.com/docs/deployment/application-management/</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> dokku@rechat.co apps:list</span></code></pre></div>
</section>
<section id="docker-cache" class="level3">
<h3 class="anchored" data-anchor-id="docker-cache">Docker cache</h3>
<p>This is how you can <a href="https://dokku.com/docs/advanced-usage/repository-management/">invalidate the docker cache</a> for a fresh build:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> dokku@rechat.co repo:purge-cache llm-eval</span></code></pre></div>
</section>
<section id="rebuild-without-pushing" class="level3">
<h3 class="anchored" data-anchor-id="rebuild-without-pushing">Rebuild without pushing</h3>
<p>Sometimes you want to rebuild without pushing. There are <a href="https://dokku.com/docs/processes/process-management/">many ways to do this</a>, but one way is like this:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> dokku@rehcat.co ps:rebuild llm-eval</span></code></pre></div>
</section>
</section>
</section>
<section id="why-did-i-write-this" class="level1">
<h1>Why Did I Write This?</h1>
<p>I had to dig up these details whenever I wanted to deploy a new app, so I had to write it up anyway. I hope you find it useful, too!</p>


</section>

 ]]></description>
  <category>infra</category>
  <category>severless</category>
  <guid>https://hamel.dev/blog/posts/dokku/</guid>
  <pubDate>Tue, 09 Jan 2024 08:00:00 GMT</pubDate>
  <media:content url="https://hamel.dev/blog/posts/dokku/images/serverless.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Tokenization Gotchas</title>
  <link>https://hamel.dev/</link>
  <description>Footguns with tokenizers and inferencing LLMs
</description>
  <category>LLMs</category>
  <category>Notes</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Sun, 17 Dec 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Tools for curating LLM Data</title>
  <link>https://hamel.dev/</link>
  <description>A review of tools for curating LLMs, and why you should build your own.
</description>
  <category>LLMs</category>
  <category>Notes</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Wed, 15 Nov 2023 08:00:00 GMT</pubDate>
</item>
<item>
  <title>vLLM &amp; Large Models</title>
  <link>https://hamel.dev/</link>
  <description>Using tensor parallelism w/ vLLM &amp; Modal to run Llama 70b
</description>
  <category>LLMs</category>
  <category>Notes</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Sat, 28 Oct 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Optimizing LLM latency</title>
  <link>https://hamel.dev/</link>
  <description>An exploration of ways to optimize LLM latency.
</description>
  <category>LLMs</category>
  <category>Notes</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Sun, 15 Oct 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>On commercializing nbdev</title>
  <dc:creator>Hamel Husain</dc:creator>
  <link>https://hamel.dev/blog/posts/nbdev/</link>
  <description><![CDATA[ 




<div class="img-fluid quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/nbdev/nbdev.png" class="img-fluid figure-img"></p>
<figcaption><a href="https://nbdev.fast.ai">nbdev</a> is a software development tool based on Jupyter that feels like its from the future.</figcaption>
</figure>
</div>
<p>A few friends have asked me why I decided not to commercialize <a href="https://nbdev.fast.ai/">nbdev</a>, especially after putting lots of work into the project, including leaving my full-time job to work on it. So I thought I would write a short post to explain my reasoning.</p>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p><a href="https://nbdev.fast.ai">nbdev</a> is an innovative software development framework for Python that embraces <a href="https://en.wikipedia.org/wiki/Literate_programming">literate</a> and <a href="https://en.wikipedia.org/wiki/Exploratory_programming">exploratory</a> programming. I worked on nbdev from 2020-2023 with <a href="https://github.com/jph00">Jeremy Howard</a> and, later, <a href="https://github.com/seem">Wasim Lorgat</a>. I had the privilege and excitement of exploring the boundaries of developer tools and exploratory programming while working with very talented software engineers. In addition to creating a tool many people enjoyed, I <a href="https://nbdev.fast.ai/blog/posts/2022-07-28-nbdev2/">enjoyed using nbdev</a> for personal and professional projects.</p>
</section>
<section id="opportunities" class="level2">
<h2 class="anchored" data-anchor-id="opportunities">Opportunities</h2>
<p>While conducting product research, I interviewed many developers from different backgrounds to understand their pain points and needs. All developers I talked to struggled with one key challenge: it was difficult, if not impossible, to convince other engineers to use nbdev.</p>
<p>The following are the biggest reasons that prevented adoption:</p>
<ul>
<li><strong>Friction in onboarding engineers</strong>. In many companies, there are often existing Python projects, and it can be detrimental to maintain different ways of doing things when a company has already settled upon one way that it has built processes and tools around.</li>
<li><strong>Collisions with the rest of the software development stack</strong>: it was (and still is) a pain to version control notebooks in a way that’s conducive to collaboration. For practical purposes, you cannot perform code reviews of notebooks on GitHub without purchasing a tool called <a href="https://www.reviewnb.com/">ReviewNB</a>. So instead of convincing people to use nbdev, you have to convince them to use nbdev and ReviewNB. This makes the barrier to initial adoption considerably high - as procuring software in many organizations is a non-trivial process involving security review, compliance, legal and other stakeholders.</li>
</ul>
<p>I viewed solving the above problems as potential opportunities for commercializing nbdev.</p>
</section>
<section id="shifting-focus" class="level2">
<h2 class="anchored" data-anchor-id="shifting-focus">Shifting Focus</h2>
<p>Jeremy, Wasim, and I eventually settled on the idea of “WordPress for developers,” a hosted site allowing people to create and share nbdev projects. We thought this would be an excellent way to get people to try nbdev without installing anything. The idea was to narrow the audience to people interested in hosting projects on a platform that promoted exploration and sharing, similar to <a href="https://glitch.com/">Glitch</a> that was as easy to use and pragmatic as <a href="https://wordpress.com/">Wordpress</a>.</p>
<p>Around the same time we began discussing hosted tools, the machine learning world experienced a tectonic shift due to the explosion of Generative AI, namely Stable Diffusion. <a href="https://fast.ai">fast.ai</a>, the organization that created nbdev, was also changing its focus. fast.ai’s prime directive was to make deep learning accessible to as many people as possible, and generative AI was too important to ignore. Accordingly, Jeremy placed his full attention on a <a href="https://course.fast.ai/Lessons/lesson9.html">Stable Diffusion course</a>.</p>
<p>This pivot caused some turbulence as we navigated the different priorities of nbdev, generative AI research, and making money. We eventually settled on offering consulting services for everything related to fast.ai in the form of <a href="https://www.fast.ai/partners.html">fast.ai partners</a>, which would allow us to bootstrap ourselves financially and embrace the larger mission of fast.ai (including generative AI and research). Eventually, I found the splintered focus across so many areas to be unproductive<sup>1</sup> and decided to step away from everything except consulting to regain my footing.</p>
<p>Soon after that, ChatGPT emerged onto the scene and caused further shifts in machine learning that were orders of magnitude larger than their text-to-image predecessors. Pretty soon, all of my clients were interested in language models, and I found myself working exclusively on operationalizing them (a skill that I have cultivated by working in machine learning for 20+ years). Additionally, LLMs profoundly changed the nature of software development, especially the kind of software development that nbdev was designed to support<sup>2</sup>. These factors and those discussed earlier suggested it was a good time to step away from nbdev and focus on other things.</p>
</section>
<section id="what-i-learned" class="level2">
<h2 class="anchored" data-anchor-id="what-i-learned">What I learned</h2>
<p>I learned some important lessons during this process:</p>
<ol type="1">
<li>Just because you love a project and find it useful, that doesn’t necessarily imply that it’s ripe for commercialization. I always struggled to gain conviction that there was a good business model for nbdev.<sup>3</sup> Instead, I pursued this path because I was drawn to the idea of starting a business with people I really liked. Ultimately, I learned that at least one person needs strong conviction <em>in addition</em> to being excited about the people you are working with - not just one or the other.<sup>4</sup> I also learned that it’s important to be honest with yourself about your (and your team’s) level of conviction and not try to force something that isn’t there.</li>
<li>Listen to your instincts. I ignored my instincts on multiple occasions throughout this journey. As I’ve grown older, I’ve learned to make this mistake much less often, but I could have done better here.</li>
<li>Don’t be afraid to pivot. I think we avoided unnecessary churn by steering clear of a situation that wasn’t promising. I’m much more excited about the work I’m doing now.<sup>5</sup></li>
<li>Own your own brand. My professional brand became increasingly tied to fast.ai and my friend Jeremy Howard. I’m grateful for the growth I’ve experienced under this mentorship – but I believe it is important to build your own distinct brand and identity. I discovered it can be challenging to build your own brand when you are working on someone else’s project<sup>6</sup>, and is something I struggled with. I’m looking forward to working on this more.</li>
</ol>
</section>
<section id="future-directions" class="level2">
<h2 class="anchored" data-anchor-id="future-directions">Future Directions</h2>
<p>I suspect that I’m not completely finished with nbdev. I may revisit the project or related ideas when the time is right. I’m excited by the work <a href="https://posit.co">Posit</a> is doing in the areas of literate and exploratory programming, which include many of the ideas explored in nbdev. Wasim has even joined the team at Posit, so I’m excited to see what they come up with.<sup>7</sup></p>
<p>Regarding what I’m working on next – I’ll have to save my thoughts on that for another post 😊.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I burned out several times during this process, but I didn’t realize why at the time. Not surprisingly, trying to focus on too many things at once was the root cause.↩︎</p></li>
<li id="fn2"><p>See <a href="https://www.loom.com/share/5ab26344119440a5b70ce4094827d9e3">this demo</a> for ideas on how coding with LLMs might look like, especially with notebooks.↩︎</p></li>
<li id="fn3"><p>The problem with the hosted solution is that this is not something I would want to use. I can’t picture myself trying to host code on something other than GitHub/GitLab.↩︎</p></li>
<li id="fn4"><p>Without shared conviction, there is no glue holding everyone together and people can drift apart.↩︎</p></li>
<li id="fn5"><p>I’ll share more about this in a future post.↩︎</p></li>
<li id="fn6"><p>I don’t believe this is always the case, but it can be true depending on the dynamics of the group.↩︎</p></li>
<li id="fn7"><p>We previously partnered with Posit and <a href="https://en.wikipedia.org/wiki/Joseph_J._Allaire">JJ Allaire</a> and built nbdev on top of <a href="https://quarto.org/">Quarto</a>. I’m currently advising Posit on their product and strategy. They have additional projects on their roadmap that I cannot disclose now.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Jupyter</category>
  <category>nbdev</category>
  <guid>https://hamel.dev/blog/posts/nbdev/</guid>
  <pubDate>Tue, 30 May 2023 07:00:00 GMT</pubDate>
  <media:content url="https://hamel.dev/blog/posts/nbdev/nbdev.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Why Should ML Engineers Learn Kubernetes?</title>
  <dc:creator>Hamel Husain</dc:creator>
  <link>https://hamel.dev/blog/posts/k8s/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
K8s For Data Scientists Course
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you came here looking for the course, feel free to jump ahead to: K8s For Data Scientists.</p>
</div>
</div>
<p><a href="https://kubernetes.io/">Kubernetes</a>, known as K8s, is an open-source system for deploying and managing containerized applications in the cloud. An increasing amount of modern web applications are deployed on K8s. If you are an ML engineer, it is increasingly likely that either the infrastructure you use to train, monitor, or orchestrate your models is deployed on K8s, or downstream applications that consume your models are running on K8s. However, K8s is a complex system that can be intimidating to learn.</p>
<p>I agree with Chip Huyen that, in theory, <a href="https://huyenchip.com/2021/09/13/data-science-infrastructure.html">Data Scientists <strong>shouldn’t need to</strong> learn K8s</a>. However, the truth is: <strong>Even though you shouldn’t have to, it’s really beneficial if you do!</strong> I’ve found that I’m often constrained by infrastructure and that infrastructure is increasingly hosted on Kubernetes.</p>
<p>For example, I’m rarely given access to a cloud provider’s console, and instead, I have access to a K8s cluster with some data tools already installed. When something goes awry, it’s beneficial to know enough about K8s to debug the issue. Additionally, familiarity with basic concepts allows me to have more productive conversations with my team about infrastructure.</p>
<p><a href="https://twitter.com/vboykis/status/1596610600511102976">Vicki Boykis</a> seems to agree that the investment in learning this technology is worthwhile<sup>1</sup>:</p>
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/20221212131043.png" class="img-fluid"></p>
<p>Below, I outline several reasons why learning K8s is a good idea for machine learning engineers<sup>2</sup>.</p>
<section id="hosted-dataml-tools-are-not-always-an-option" class="level2">
<h2 class="anchored" data-anchor-id="hosted-dataml-tools-are-not-always-an-option">Hosted data/ML tools are not always an option</h2>
<div class="img-fluid quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/bellman.png" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
<figcaption>A robot concierge helping a scientist</figcaption>
</figure>
</div>
<p>Large cloud providers offer their flavors of ML infrastructure as hosted solutions<sup>3</sup>. However, there is often a gap between these offerings and the needs of machine learning teams. For example, I’ve seen the following tools deployed alongside or in place of hosted solutions:</p>
<ul>
<li><a href="https://metaflow.org/">Metaflow</a></li>
<li><a href="https://www.kubeflow.org/">Kubeflow</a></li>
<li><a href="https://argoproj.github.io/argo/">Argo</a></li>
<li><a href="https://jupyter.org/hub">JupyterHub</a></li>
<li><a href="https://www.dask.org/">Dask</a></li>
<li>etc.</li>
</ul>
<p>When open source isn’t enough, third-party vendors are happy to install their software on your cloud. However, you often need basic infrastructure skills to enable this. These skills often intersect with Kubernetes. While you may not be responsible for deploying the infrastructure yourself, it is helpful to understand the basics of how things work so that you can do basic debugging and troubleshooting. For example, knowing where to find logs or an API/HTTPS endpoint can unblock you in many cases.</p>
</section>
<section id="nobody-is-coming-to-save-you" class="level2">
<h2 class="anchored" data-anchor-id="nobody-is-coming-to-save-you">Nobody is coming to save you</h2>
<div class="img-fluid quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/superhero.png" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
<figcaption>A super hero</figcaption>
</figure>
</div>
<p>A typical first experience as a machine learning professional is that you don’t have the necessary tools to get started. This is incredibly frustrating, as making progress without the proper tools can be hard. This experience usually culminates in a conversation like this:</p>
<hr>
<p><em>ML Eng: I’m excited to join ACME company! You’ve hired me to optimize marketing spending with predictive models. The issue is that we don’t have the basic infrastructure or tools necessary for me to work efficiently.</em></p>
<p><em>Manager: I’m confused. Can’t you install the tools you need? Isn’t that what you are for? I was expecting that you would figure it out.</em></p>
<p><em>ML Eng: No, I don’t know how to set up and deploy infrastructure. We need a special infrastructure or DevOps person for that.</em></p>
<p><em>Manager: It will be hard to ask for more resources if we don’t know the expected return on investment. Can you do the ML project first, demonstrate some value, and then we can invest in infrastructure?</em></p>
<p><em>ML Eng: I need some minimum tools to experiment more quickly and develop a proof of concept. Also, I need tools that might help me collaborate better with my team…</em></p>
<hr>
<p>My experience is that DevOps teams are chronically understaffed and overworked. While it usually isn’t advisable to deploy enterprise software yourself on Kubernetes for security concerns, having basic skills can lift a tremendous burden off your DevOps counterparts and make it tractable for them to help you.</p>
<p>K8s are not a panacea for all infrastructure problems. You must operate within the constraints of your organization and existing software stack.<sup>4</sup> However, with its growing popularity, it is increasingly likely that learning this technology will help you.</p>
</section>
<section id="ml-research-is-crowded.-compete-on-swe-skills." class="level2">
<h2 class="anchored" data-anchor-id="ml-research-is-crowded.-compete-on-swe-skills.">ML research is crowded. Compete on SWE skills.</h2>
<div class="img-fluid quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/crowd.png" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
<figcaption>An overcrowded room of scientists</figcaption>
</figure>
</div>
<p>One of the best ways to set yourself apart as a data scientist is through your skills. Traditional education often emphasizes learning the latest ML techniques. However, cutting-edge ML research is very competitive. It’s also an extremely crowded space.</p>
<p>In my experience, the bottleneck many teams face is not a lack of knowledge of cutting-edge ML techniques but software engineering skills and partners to help operationalize models. If you take some time to learn how to stand up tools and infrastructure, you will be invaluable to your team.</p>
<p>More importantly, deploying and integrating models into services and applications is critical to connecting ML to business problems. Learning K8s will help you do this.</p>
</section>
<section id="your-company-likely-already-runs-k8s" class="level2">
<h2 class="anchored" data-anchor-id="your-company-likely-already-runs-k8s">Your company likely already runs K8s</h2>
<div class="img-fluid quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/meeting.png" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
<figcaption>A scientist shaking hands with someone who runs infrastructure</figcaption>
</figure>
</div>
<p>Just as Python is the lingua franca of data science, K8s is becoming the lingua franca of cloud infrastructure. According to a <a href="https://www.cncf.io/reports/cncf-annual-survey-2021/">2021 Survey by CNCF</a>, 96% of organizations are either using or evaluating Kubernetes. Furthermore, Stack Overflow’s <a href="https://survey.stackoverflow.co/2022/#section-most-loved-dreaded-and-wanted-other-tools">2022 Developer Survey</a> shows that Docker and Kubernetes are the number one and two most loved and wanted tools, respectively. This is a strong indicator that K8s are here to stay.</p>
<p>Basic proficiency with K8s will drastically increase your chances of garnering support for your desired tools in many organizations. Proficiency with K8s increases the likelihood that:</p>
<ul>
<li>Your DevOps counterparts will feel comfortable with the tools you want to deploy</li>
<li>You will have a shared language in which to talk to your application administrators</li>
<li>You will be more likely to attract people to help you with infra <sup>5</sup></li>
</ul>
<p>These factors make it much more likely that you will get the tools that meet you where you are as opposed to something a software engineer without any data science experience thinks is a good idea (which I’ve seen happen a lot!).</p>
</section>
<section id="but-isnt-it-overkill" class="level2">
<h2 class="anchored" data-anchor-id="but-isnt-it-overkill">But isn’t it overkill?</h2>
<div class="img-fluid quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/orange.png" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
<figcaption>Cutting oranges with a chainsaw</figcaption>
</figure>
</div>
<p>For simple apps that you want to stand up quickly or prototype, K8s is overkill. Instead, I’m advocating knowledge of K8s as useful when working within the environments found in many companies. For example, hosting your data product on a single VM is often insufficient if you want to deploy production software. Many companies even have infrastructure that may block you from doing this with paved paths that only include Kubernetes.</p>
<p>Even if you are not deploying any production software, K8s can be invaluable in allowing you to deploy the tools you need. In many cases using K8s can make tasks easier. Enterprises have necessarily invested resources in creating guardrails to control costs and security. Those guardrails are increasingly built around K8s patterns<sup>6</sup>. Understanding these concepts can make operating within the confines of your company’s cloud stack easier.</p>
</section>
<section id="you-dont-need-to-be-an-expert" class="level2">
<h2 class="anchored" data-anchor-id="you-dont-need-to-be-an-expert">You don’t need to be an expert</h2>
<div class="img-fluid quarto-figure quarto-figure-left">
<figure class="figure">
<p><img src="https://hamel.dev/blog/posts/k8s/course_img/student.png" class="img-fluid quarto-figure quarto-figure-left figure-img" style="width:50.0%"></p>
<figcaption>A student sitting at a desk in a library</figcaption>
</figure>
</div>
<p>K8s are complicated, but you don’t need to become an expert to unlock great value as a Data Scientist. I’m not suggesting that data scientists become K8s administrators. K8s Administration is a very involved task and worthy of its own role. Unfortunately, nearly all educational material around K8s is focused on being an administrator, which is overkill for what most data scientists need.</p>
</section>
<section id="a-course" class="level2">
<h2 class="anchored" data-anchor-id="a-course">A course?</h2>
<p>I haven’t yet found a good resource for people like data scientists to learn Kubernetes without wading through lots of irrelevant material geared towards administrators. So my colleagues and I are considering creating a free course with data scientists in mind. If this sounds interesting, you <a href="https://k8scourse.com/">can sign up here</a>.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p><a href="https://vickiboykis.com/">Vicki</a> is not someone who is impressed by flashy or new technologies and is someone who takes a pragmatic approach to get the job done. When she says you should learn K8s, you should pay attention!↩︎</p></li>
<li id="fn2"><p>Each subsection of this article has a picture that has been generated by Stable diffusion with a prompt that very similar to the image caption.↩︎</p></li>
<li id="fn3"><p>These systems are AWS - <a href="https://aws.amazon.com/sagemaker/">Sagemaker</a>, Azure - <a href="https://azure.microsoft.com/en-us/products/machine-learning/#product-overview">AzureML</a> and GCP - <a href="https://cloud.google.com/vertex-ai-workbench">VertexAI</a>.↩︎</p></li>
<li id="fn4"><p>Some organizations have built solutions that avoid K8s. For example, <a href="https://www.bighatbio.com/">BigHat</a> uses a solution based on AWS SageMaker + Lambda and other hosted solutions. So it might be a mistake to try to move over to K8s in that example – you should try to leverage your company’s existing tech stack where possible!↩︎</p></li>
<li id="fn5"><p>My friend <a href="https://twitter.com/_inc0_">Michał Jastrzębski</a>, who specializes in ML infrastructure, has shared the following colorful anecdote with me: “when I hear Data Scientists shouldn’t learn K8s”, I hear “DevOps needs to learn Airflow”.↩︎</p></li>
<li id="fn6"><p>Specifically, K8s concepts that are relevant are namespaces, labels and RBAC.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>K8s</category>
  <guid>https://hamel.dev/blog/posts/k8s/</guid>
  <pubDate>Mon, 16 Jan 2023 08:00:00 GMT</pubDate>
  <media:content url="https://user-images.githubusercontent.com/1483922/209075410-b31ad913-282c-4619-87ad-3a7679e92baf.png" medium="image" type="image/png"/>
</item>
<item>
  <title>nbdev + Quarto: A new secret weapon for productivity</title>
  <link>https://hamel.dev/</link>
  <description>Our favorite tool for software engineering productivity–nbdev, now re-written with Quarto.
</description>
  <category>Jupyter</category>
  <category>Quarto</category>
  <category>nbdev</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Thu, 28 Jul 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Notebooks in production with Metaflow</title>
  <link>https://hamel.dev/</link>
  <description>Introduces a new Metaflow feature that allows users to use notebooks in production ML workflows.
</description>
  <category>Metaflow</category>
  <category>Jupyter</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Wed, 09 Feb 2022 08:00:00 GMT</pubDate>
</item>
<item>
  <title>ghapi, a new third-party Python client for the GitHub API</title>
  <link>https://hamel.dev/</link>
  <description>Learn about ghapi, a third-party Python library and CLI client for the GitHub API. It includes tab-completion, integrated documentation and automatic pagination of responses. ghapi automatically manages required headers, query strings, route parameters, post data, and much more.
</description>
  <category>python</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Fri, 18 Dec 2020 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Nbdev: A literate programming environment that democratizes software engineering best practices</title>
  <link>https://hamel.dev/</link>
  <description>Learn about nbdev, a new literate programming environment for Python.
</description>
  <category>nbdev</category>
  <category>Jupyter</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Fri, 20 Nov 2020 08:00:00 GMT</pubDate>
</item>
<item>
  <title>fastcore: An Underrated Python Library</title>
  <link>https://hamel.dev/</link>
  <description>A unique python library that extends the python programming language and provides utilities that enhance productivity.
</description>
  <category>python</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Tue, 01 Sep 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Science Meets Devops: MLOps with Jupyter, Git, &amp; Kubernetes</title>
  <link>https://hamel.dev/</link>
  <description>An end-to-end example of deploying a machine learning product using Jupyter, Papermill, Tekton, GitOps and Kubeflow. by _Jeremy Lewi, Hamel_Husain_, The Kubeflow Blog. 
</description>
  <category>Kubeflow</category>
  <category>papermill</category>
  <category>Tekton</category>
  <category>GitOps</category>
  <category>Jupyter</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Tue, 01 Sep 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>GitHub Actions: Providing Data Scientists With New Superpowers.</title>
  <link>https://hamel.dev/</link>
  <description>A Tutorial on GitHub Actions For Data Scientists.
</description>
  <category>Actions</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Fri, 06 Mar 2020 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing fastpages, An easy to use blogging platform with extra features for Jupyter Notebooks.</title>
  <link>https://hamel.dev/</link>
  <description>An easy to use blogging platform with extra features for Jupyter Notebooks.
</description>
  <category>Jupyter</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Fri, 21 Feb 2020 08:00:00 GMT</pubDate>
</item>
<item>
  <title>Python Concurrency: The Tricky Bits</title>
  <link>https://hamel.dev/</link>
  <description>An exploration of threads, processes, and coroutines in Python, with interesting examples that illuminate the differences between each.
</description>
  <category>python</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Wed, 05 Feb 2020 08:00:00 GMT</pubDate>
</item>
<item>
  <title>CodeSearchNet Challenge: Evaluating the State of Semantic Code Search</title>
  <link>https://hamel.dev/</link>
  <description>by Miltiadis Allamanis, Marc Brockschmidt, Hamel Husain, Ho-Hsiang Wu, Tiferet Gazit
</description>
  <category>ML-On-Code</category>
  <category>NLP</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Fri, 20 Sep 2019 07:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Automate Tasks on GitHub With Machine Learning for Fun and Profit</title>
  <link>https://hamel.dev/</link>
  <description>A tutorial on how to build a GitHub App that predicts and applies issue labels using Tensorflow and public datasets.
</description>
  <category>NLP</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Wed, 10 Apr 2019 07:00:00 GMT</pubDate>
</item>
<item>
  <title>How To Create Natural Language Semantic Search for Arbitrary Objects With Deep Learning</title>
  <link>https://hamel.dev/</link>
  <description>An end-to-end example of how to build a system that can search objects semantically.
</description>
  <category>ML-On-Code</category>
  <category>NLP</category>
  <guid>https://hamel.dev/</guid>
  <pubDate>Tue, 29 May 2018 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
